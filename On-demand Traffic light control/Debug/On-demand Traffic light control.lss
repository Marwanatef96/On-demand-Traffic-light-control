
On-demand Traffic light control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009a4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000a18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  00000a18  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001227  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a5  00000000  00000000  00001ddb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bf9  00000000  00000000  00002580  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  0000317c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050e  00000000  00000000  00003348  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006c5  00000000  00000000  00003856  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00003f1b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 42 03 	jmp	0x684	; 0x684 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 c9 04 	call	0x992	; 0x992 <main>
  74:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <CAR_G_PPL_R_ON>:
#include "application.h"
int YES_BUTTON_PRESSED=0,IS_BUTTON_PRESSED=0,i;
void CAR_G_PPL_R_ON()
{
	LED_on(PORT_A,PPL_R_LED);
  7c:	65 e0       	ldi	r22, 0x05	; 5
  7e:	81 e4       	ldi	r24, 0x41	; 65
  80:	0e 94 81 03 	call	0x702	; 0x702 <LED_on>
	LED_on(PORT_A,CAR_G_LED);
  84:	60 e0       	ldi	r22, 0x00	; 0
  86:	81 e4       	ldi	r24, 0x41	; 65
  88:	0e 94 81 03 	call	0x702	; 0x702 <LED_on>
  8c:	08 95       	ret

0000008e <CAR_G_PLL_R_OFF>:
}
void CAR_G_PLL_R_OFF()
{
	LED_off(PORT_A,PPL_R_LED);
  8e:	65 e0       	ldi	r22, 0x05	; 5
  90:	81 e4       	ldi	r24, 0x41	; 65
  92:	0e 94 88 03 	call	0x710	; 0x710 <LED_off>
	LED_off(PORT_A,CAR_G_LED);
  96:	60 e0       	ldi	r22, 0x00	; 0
  98:	81 e4       	ldi	r24, 0x41	; 65
  9a:	0e 94 88 03 	call	0x710	; 0x710 <LED_off>
  9e:	08 95       	ret

000000a0 <CAR_R_PPL_G_ON>:
}
void CAR_R_PPL_G_ON()
{
	LED_on(PORT_A,PPL_G_LED);
  a0:	63 e0       	ldi	r22, 0x03	; 3
  a2:	81 e4       	ldi	r24, 0x41	; 65
  a4:	0e 94 81 03 	call	0x702	; 0x702 <LED_on>
	LED_on(PORT_A,CAR_R_LED);
  a8:	62 e0       	ldi	r22, 0x02	; 2
  aa:	81 e4       	ldi	r24, 0x41	; 65
  ac:	0e 94 81 03 	call	0x702	; 0x702 <LED_on>
  b0:	08 95       	ret

000000b2 <CAR_R_PPL_G_OFF>:
}
void CAR_R_PPL_G_OFF()
{
	LED_off(PORT_A,PPL_G_LED);
  b2:	63 e0       	ldi	r22, 0x03	; 3
  b4:	81 e4       	ldi	r24, 0x41	; 65
  b6:	0e 94 88 03 	call	0x710	; 0x710 <LED_off>
	LED_off(PORT_A,CAR_R_LED);
  ba:	62 e0       	ldi	r22, 0x02	; 2
  bc:	81 e4       	ldi	r24, 0x41	; 65
  be:	0e 94 88 03 	call	0x710	; 0x710 <LED_off>
  c2:	08 95       	ret

000000c4 <BOTH_Y_LED_ON>:
}
void BOTH_Y_LED_ON()
{
	LED_on(PORT_A,PPL_Y_LED);
  c4:	64 e0       	ldi	r22, 0x04	; 4
  c6:	81 e4       	ldi	r24, 0x41	; 65
  c8:	0e 94 81 03 	call	0x702	; 0x702 <LED_on>
	LED_on(PORT_A,CAR_Y_LED);
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	81 e4       	ldi	r24, 0x41	; 65
  d0:	0e 94 81 03 	call	0x702	; 0x702 <LED_on>
  d4:	08 95       	ret

000000d6 <BOTH_Y_LED_OFF>:
}
void BOTH_Y_LED_OFF()
{
	LED_off(PORT_A,PPL_Y_LED);
  d6:	64 e0       	ldi	r22, 0x04	; 4
  d8:	81 e4       	ldi	r24, 0x41	; 65
  da:	0e 94 88 03 	call	0x710	; 0x710 <LED_off>
	LED_off(PORT_A,CAR_Y_LED);
  de:	61 e0       	ldi	r22, 0x01	; 1
  e0:	81 e4       	ldi	r24, 0x41	; 65
  e2:	0e 94 88 03 	call	0x710	; 0x710 <LED_off>
  e6:	08 95       	ret

000000e8 <check>:
}

void check()
{
	if ((IS_BUTTON_PRESSED==CAR_YG)&(YES_BUTTON_PRESSED==PPL_YG))
  e8:	91 e0       	ldi	r25, 0x01	; 1
  ea:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  ee:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  f2:	21 30       	cpi	r18, 0x01	; 1
  f4:	31 05       	cpc	r19, r1
  f6:	09 f0       	breq	.+2      	; 0xfa <check+0x12>
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <YES_BUTTON_PRESSED>
 100:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 104:	21 30       	cpi	r18, 0x01	; 1
 106:	31 05       	cpc	r19, r1
 108:	09 f0       	breq	.+2      	; 0x10c <check+0x24>
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	89 23       	and	r24, r25
 10e:	09 f4       	brne	.+2      	; 0x112 <check+0x2a>
 110:	6a c0       	rjmp	.+212    	; 0x1e6 <check+0xfe>
	{
		IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
 112:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 116:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 11a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 11e:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <YES_BUTTON_PRESSED>
		for (i=0;i<10;i++)
 122:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 126:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 12a:	15 c0       	rjmp	.+42     	; 0x156 <check+0x6e>
		{
			BOTH_Y_LED_ON();
 12c:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 130:	8a ef       	ldi	r24, 0xFA	; 250
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			BOTH_Y_LED_OFF();
 138:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 13c:	8a ef       	ldi	r24, 0xFA	; 250
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
void check()
{
	if ((IS_BUTTON_PRESSED==CAR_YG)&(YES_BUTTON_PRESSED==PPL_YG))
	{
		IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
		for (i=0;i<10;i++)
 144:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 148:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 14c:	01 96       	adiw	r24, 0x01	; 1
 14e:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 152:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 156:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 15a:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 15e:	0a 97       	sbiw	r24, 0x0a	; 10
 160:	2c f3       	brlt	.-54     	; 0x12c <check+0x44>
			BOTH_Y_LED_ON();
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_R_PPL_G_ON();
 162:	0e 94 50 00 	call	0xa0	; 0xa0 <CAR_R_PPL_G_ON>
		for (i=0;i<10;i++)
 166:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 16a:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 16e:	0d c0       	rjmp	.+26     	; 0x18a <check+0xa2>
		Delay(500);
 170:	84 ef       	ldi	r24, 0xF4	; 244
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++)
 178:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 17c:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 180:	01 96       	adiw	r24, 0x01	; 1
 182:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 186:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 18a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 18e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 192:	0a 97       	sbiw	r24, 0x0a	; 10
 194:	6c f3       	brlt	.-38     	; 0x170 <check+0x88>
		Delay(500);
		CAR_R_PPL_G_OFF();
 196:	0e 94 59 00 	call	0xb2	; 0xb2 <CAR_R_PPL_G_OFF>
		for (i=0;i<10;i++)
 19a:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 19e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 1a2:	15 c0       	rjmp	.+42     	; 0x1ce <check+0xe6>
		{
			BOTH_Y_LED_ON();
 1a4:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 1a8:	8a ef       	ldi	r24, 0xFA	; 250
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			BOTH_Y_LED_OFF();
 1b0:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 1b4:	8a ef       	ldi	r24, 0xFA	; 250
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
		}
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++)
		Delay(500);
		CAR_R_PPL_G_OFF();
		for (i=0;i<10;i++)
 1bc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 1c0:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 1c4:	01 96       	adiw	r24, 0x01	; 1
 1c6:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 1ca:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 1ce:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 1d2:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 1d6:	0a 97       	sbiw	r24, 0x0a	; 10
 1d8:	2c f3       	brlt	.-54     	; 0x1a4 <check+0xbc>
			BOTH_Y_LED_ON();
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		i=11;
 1da:	8b e0       	ldi	r24, 0x0B	; 11
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 1e2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
	}
	
	
	if ((IS_BUTTON_PRESSED==CAR_YR)&(YES_BUTTON_PRESSED==PPL_YR))
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1ec:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1f0:	22 30       	cpi	r18, 0x02	; 2
 1f2:	31 05       	cpc	r19, r1
 1f4:	09 f0       	breq	.+2      	; 0x1f8 <check+0x110>
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <YES_BUTTON_PRESSED>
 1fe:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 202:	22 30       	cpi	r18, 0x02	; 2
 204:	31 05       	cpc	r19, r1
 206:	09 f0       	breq	.+2      	; 0x20a <check+0x122>
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	89 23       	and	r24, r25
 20c:	09 f4       	brne	.+2      	; 0x210 <check+0x128>
 20e:	a6 c0       	rjmp	.+332    	; 0x35c <check+0x274>
	{
		IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
 210:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 214:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 218:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 21c:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <YES_BUTTON_PRESSED>
		for (i=0;i<10;i++)
 220:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 224:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 228:	15 c0       	rjmp	.+42     	; 0x254 <check+0x16c>
		{
			BOTH_Y_LED_ON();
 22a:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 22e:	8a ef       	ldi	r24, 0xFA	; 250
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			BOTH_Y_LED_OFF();
 236:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 23a:	8a ef       	ldi	r24, 0xFA	; 250
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
	
	
	if ((IS_BUTTON_PRESSED==CAR_YR)&(YES_BUTTON_PRESSED==PPL_YR))
	{
		IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
		for (i=0;i<10;i++)
 242:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 246:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 24a:	01 96       	adiw	r24, 0x01	; 1
 24c:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 250:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 254:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 258:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 25c:	0a 97       	sbiw	r24, 0x0a	; 10
 25e:	2c f3       	brlt	.-54     	; 0x22a <check+0x142>
			BOTH_Y_LED_ON();
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_R_PPL_G_ON();
 260:	0e 94 50 00 	call	0xa0	; 0xa0 <CAR_R_PPL_G_ON>
		for (i=0;i<10;i++)
 264:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 268:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 26c:	0d c0       	rjmp	.+26     	; 0x288 <check+0x1a0>
		Delay(500);
 26e:	84 ef       	ldi	r24, 0xF4	; 244
 270:	91 e0       	ldi	r25, 0x01	; 1
 272:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++)
 276:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 27a:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 284:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 288:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 28c:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 290:	0a 97       	sbiw	r24, 0x0a	; 10
 292:	6c f3       	brlt	.-38     	; 0x26e <check+0x186>
		Delay(500);
		CAR_R_PPL_G_OFF();
 294:	0e 94 59 00 	call	0xb2	; 0xb2 <CAR_R_PPL_G_OFF>
		for (i=0;i<10;i++)
 298:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 29c:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 2a0:	15 c0       	rjmp	.+42     	; 0x2cc <check+0x1e4>
		{
			BOTH_Y_LED_ON();
 2a2:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 2a6:	8a ef       	ldi	r24, 0xFA	; 250
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			BOTH_Y_LED_OFF();
 2ae:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 2b2:	8a ef       	ldi	r24, 0xFA	; 250
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
		}
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++)
		Delay(500);
		CAR_R_PPL_G_OFF();
		for (i=0;i<10;i++)
 2ba:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 2be:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 2c8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 2cc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 2d0:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 2d4:	0a 97       	sbiw	r24, 0x0a	; 10
 2d6:	2c f3       	brlt	.-54     	; 0x2a2 <check+0x1ba>
			BOTH_Y_LED_ON();
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_G_PPL_R_ON();
 2d8:	0e 94 3e 00 	call	0x7c	; 0x7c <CAR_G_PPL_R_ON>
		for (i=0;i<10;i++)
 2dc:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 2e0:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 2e4:	0d c0       	rjmp	.+26     	; 0x300 <check+0x218>
		Delay(500);
 2e6:	84 ef       	ldi	r24, 0xF4	; 244
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_G_PPL_R_ON();
		for (i=0;i<10;i++)
 2ee:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 2f2:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 2f6:	01 96       	adiw	r24, 0x01	; 1
 2f8:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 2fc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 300:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 304:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 308:	0a 97       	sbiw	r24, 0x0a	; 10
 30a:	6c f3       	brlt	.-38     	; 0x2e6 <check+0x1fe>
		Delay(500);
		CAR_G_PLL_R_OFF();
 30c:	0e 94 47 00 	call	0x8e	; 0x8e <CAR_G_PLL_R_OFF>
		for (i=0;i<10;i++)
 310:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 314:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 318:	15 c0       	rjmp	.+42     	; 0x344 <check+0x25c>
		{
			BOTH_Y_LED_ON();
 31a:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 31e:	8a ef       	ldi	r24, 0xFA	; 250
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			BOTH_Y_LED_OFF();
 326:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 32a:	8a ef       	ldi	r24, 0xFA	; 250
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
		}
		CAR_G_PPL_R_ON();
		for (i=0;i<10;i++)
		Delay(500);
		CAR_G_PLL_R_OFF();
		for (i=0;i<10;i++)
 332:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 336:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 340:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 344:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 348:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 34c:	0a 97       	sbiw	r24, 0x0a	; 10
 34e:	2c f3       	brlt	.-54     	; 0x31a <check+0x232>
			BOTH_Y_LED_ON();
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		i=11;
 350:	8b e0       	ldi	r24, 0x0B	; 11
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 358:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
	}
	
	if((IS_BUTTON_PRESSED==CAR_R)&(YES_BUTTON_PRESSED==PPL_G))
 35c:	91 e0       	ldi	r25, 0x01	; 1
 35e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 362:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 366:	23 30       	cpi	r18, 0x03	; 3
 368:	31 05       	cpc	r19, r1
 36a:	09 f0       	breq	.+2      	; 0x36e <check+0x286>
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <YES_BUTTON_PRESSED>
 374:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 378:	23 30       	cpi	r18, 0x03	; 3
 37a:	31 05       	cpc	r19, r1
 37c:	09 f0       	breq	.+2      	; 0x380 <check+0x298>
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	89 23       	and	r24, r25
 382:	61 f1       	breq	.+88     	; 0x3dc <check+0x2f4>
	{	IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
 384:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 388:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 38c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 390:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <YES_BUTTON_PRESSED>
		CAR_R_PPL_G_OFF();
 394:	0e 94 59 00 	call	0xb2	; 0xb2 <CAR_R_PPL_G_OFF>
		CAR_R_PPL_G_ON();
 398:	0e 94 50 00 	call	0xa0	; 0xa0 <CAR_R_PPL_G_ON>
		for (i=0;i<10;i++)
 39c:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 3a0:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 3a4:	0d c0       	rjmp	.+26     	; 0x3c0 <check+0x2d8>
		Delay(500);
 3a6:	84 ef       	ldi	r24, 0xF4	; 244
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
	
	if((IS_BUTTON_PRESSED==CAR_R)&(YES_BUTTON_PRESSED==PPL_G))
	{	IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
		CAR_R_PPL_G_OFF();
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++)
 3ae:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 3b2:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 3bc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 3c0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 3c4:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 3c8:	0a 97       	sbiw	r24, 0x0a	; 10
 3ca:	6c f3       	brlt	.-38     	; 0x3a6 <check+0x2be>
		Delay(500);
		CAR_R_PPL_G_OFF();
 3cc:	0e 94 59 00 	call	0xb2	; 0xb2 <CAR_R_PPL_G_OFF>
		i=11;
 3d0:	8b e0       	ldi	r24, 0x0B	; 11
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 3d8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
	}
	
	if((IS_BUTTON_PRESSED==CAR_G)&(YES_BUTTON_PRESSED==PPL_R))
 3dc:	91 e0       	ldi	r25, 0x01	; 1
 3de:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 3e2:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3e6:	24 30       	cpi	r18, 0x04	; 4
 3e8:	31 05       	cpc	r19, r1
 3ea:	09 f0       	breq	.+2      	; 0x3ee <check+0x306>
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <YES_BUTTON_PRESSED>
 3f4:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 3f8:	24 30       	cpi	r18, 0x04	; 4
 3fa:	31 05       	cpc	r19, r1
 3fc:	09 f0       	breq	.+2      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	89 23       	and	r24, r25
 402:	09 f4       	brne	.+2      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 404:	88 c0       	rjmp	.+272    	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
	{
		IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
 406:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 40a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 40e:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 412:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <YES_BUTTON_PRESSED>
		CAR_G_PLL_R_OFF();
 416:	0e 94 47 00 	call	0x8e	; 0x8e <CAR_G_PLL_R_OFF>
		for (i=0;i<10;i++)
 41a:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 41e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 422:	15 c0       	rjmp	.+42     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
		{
			BOTH_Y_LED_ON();
 424:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 428:	8a ef       	ldi	r24, 0xFA	; 250
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			BOTH_Y_LED_OFF();
 430:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 434:	8a ef       	ldi	r24, 0xFA	; 250
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
	
	if((IS_BUTTON_PRESSED==CAR_G)&(YES_BUTTON_PRESSED==PPL_R))
	{
		IS_BUTTON_PRESSED=0,YES_BUTTON_PRESSED=0;
		CAR_G_PLL_R_OFF();
		for (i=0;i<10;i++)
 43c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 440:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 444:	01 96       	adiw	r24, 0x01	; 1
 446:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 44a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 44e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 452:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 456:	0a 97       	sbiw	r24, 0x0a	; 10
 458:	2c f3       	brlt	.-54     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
			BOTH_Y_LED_ON();
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_R_PPL_G_ON();
 45a:	0e 94 50 00 	call	0xa0	; 0xa0 <CAR_R_PPL_G_ON>
		for (i=0;i<10;i++)
 45e:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 462:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 466:	0d c0       	rjmp	.+26     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
		Delay(500);
 468:	84 ef       	ldi	r24, 0xF4	; 244
 46a:	91 e0       	ldi	r25, 0x01	; 1
 46c:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++)
 470:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 474:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 478:	01 96       	adiw	r24, 0x01	; 1
 47a:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 47e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 482:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 486:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 48a:	0a 97       	sbiw	r24, 0x0a	; 10
 48c:	6c f3       	brlt	.-38     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
		Delay(500);
		CAR_R_PPL_G_OFF();
 48e:	0e 94 59 00 	call	0xb2	; 0xb2 <CAR_R_PPL_G_OFF>
		for (i=0;i<10;i++)
 492:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 496:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 49a:	15 c0       	rjmp	.+42     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
		{
			BOTH_Y_LED_ON();
 49c:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 4a0:	8a ef       	ldi	r24, 0xFA	; 250
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			BOTH_Y_LED_OFF();
 4a8:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 4ac:	8a ef       	ldi	r24, 0xFA	; 250
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
		}
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++)
		Delay(500);
		CAR_R_PPL_G_OFF();
		for (i=0;i<10;i++)
 4b4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 4b8:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 4bc:	01 96       	adiw	r24, 0x01	; 1
 4be:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 4c2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 4c6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 4ca:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 4ce:	0a 97       	sbiw	r24, 0x0a	; 10
 4d0:	2c f3       	brlt	.-54     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
			BOTH_Y_LED_ON();
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_G_PPL_R_ON();
 4d2:	0e 94 3e 00 	call	0x7c	; 0x7c <CAR_G_PPL_R_ON>
		for (i=0;i<10;i++)
 4d6:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 4da:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 4de:	0d c0       	rjmp	.+26     	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
		Delay(500);
 4e0:	84 ef       	ldi	r24, 0xF4	; 244
 4e2:	91 e0       	ldi	r25, 0x01	; 1
 4e4:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			Delay(250);
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		CAR_G_PPL_R_ON();
		for (i=0;i<10;i++)
 4e8:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 4ec:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 4f0:	01 96       	adiw	r24, 0x01	; 1
 4f2:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 4f6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 4fa:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 4fe:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 502:	0a 97       	sbiw	r24, 0x0a	; 10
 504:	6c f3       	brlt	.-38     	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
		Delay(500);
		CAR_G_PLL_R_OFF();
 506:	0e 94 47 00 	call	0x8e	; 0x8e <CAR_G_PLL_R_OFF>
		i=11;
 50a:	8b e0       	ldi	r24, 0x0B	; 11
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 512:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 516:	08 95       	ret

00000518 <APP_init>:
	}
}

void APP_init()
{
	LED_init(PORT_A,CAR_G_LED);
 518:	60 e0       	ldi	r22, 0x00	; 0
 51a:	81 e4       	ldi	r24, 0x41	; 65
 51c:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LED_init>
	LED_init(PORT_A,CAR_Y_LED);
 520:	61 e0       	ldi	r22, 0x01	; 1
 522:	81 e4       	ldi	r24, 0x41	; 65
 524:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LED_init>
	LED_init(PORT_A,CAR_R_LED);
 528:	62 e0       	ldi	r22, 0x02	; 2
 52a:	81 e4       	ldi	r24, 0x41	; 65
 52c:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LED_init>
	LED_init(PORT_A,PPL_G_LED);
 530:	63 e0       	ldi	r22, 0x03	; 3
 532:	81 e4       	ldi	r24, 0x41	; 65
 534:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LED_init>
	LED_init(PORT_A,PPL_Y_LED);
 538:	64 e0       	ldi	r22, 0x04	; 4
 53a:	81 e4       	ldi	r24, 0x41	; 65
 53c:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LED_init>
	LED_init(PORT_A,PPL_R_LED);
 540:	65 e0       	ldi	r22, 0x05	; 5
 542:	81 e4       	ldi	r24, 0x41	; 65
 544:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LED_init>
	Delay_init();
 548:	0e 94 8f 03 	call	0x71e	; 0x71e <Delay_init>
	interrupt_init();
 54c:	0e 94 be 04 	call	0x97c	; 0x97c <interrupt_init>
 550:	08 95       	ret

00000552 <APP_start>:

void APP_start()
{
	while (1)
	{
		IS_BUTTON_PRESSED=CAR_G;
 552:	84 e0       	ldi	r24, 0x04	; 4
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 55a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		CAR_G_PPL_R_ON();
 55e:	0e 94 3e 00 	call	0x7c	; 0x7c <CAR_G_PPL_R_ON>
		for (i=0;i<10;i++){
 562:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 566:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 56a:	0f c0       	rjmp	.+30     	; 0x58a <APP_start+0x38>
			Delay(500);
 56c:	84 ef       	ldi	r24, 0xF4	; 244
 56e:	91 e0       	ldi	r25, 0x01	; 1
 570:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
		check();}
 574:	0e 94 74 00 	call	0xe8	; 0xe8 <check>
{
	while (1)
	{
		IS_BUTTON_PRESSED=CAR_G;
		CAR_G_PPL_R_ON();
		for (i=0;i<10;i++){
 578:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 57c:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 580:	01 96       	adiw	r24, 0x01	; 1
 582:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 586:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 58a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 58e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 592:	0a 97       	sbiw	r24, 0x0a	; 10
 594:	5c f3       	brlt	.-42     	; 0x56c <APP_start+0x1a>
			Delay(500);
		check();}
		CAR_G_PLL_R_OFF();
 596:	0e 94 47 00 	call	0x8e	; 0x8e <CAR_G_PLL_R_OFF>
		
		IS_BUTTON_PRESSED=CAR_YR;
 59a:	82 e0       	ldi	r24, 0x02	; 2
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 5a2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		for (i=0;i<10;i++)
 5a6:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 5aa:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 5ae:	17 c0       	rjmp	.+46     	; 0x5de <APP_start+0x8c>
		{
			BOTH_Y_LED_ON();
 5b0:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 5b4:	8a ef       	ldi	r24, 0xFA	; 250
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			check();
 5bc:	0e 94 74 00 	call	0xe8	; 0xe8 <check>
			BOTH_Y_LED_OFF();
 5c0:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 5c4:	8a ef       	ldi	r24, 0xFA	; 250
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			Delay(500);
		check();}
		CAR_G_PLL_R_OFF();
		
		IS_BUTTON_PRESSED=CAR_YR;
		for (i=0;i<10;i++)
 5cc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 5d0:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 5d4:	01 96       	adiw	r24, 0x01	; 1
 5d6:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 5da:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 5de:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 5e2:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 5e6:	0a 97       	sbiw	r24, 0x0a	; 10
 5e8:	1c f3       	brlt	.-58     	; 0x5b0 <APP_start+0x5e>
			check();
			BOTH_Y_LED_OFF();
			Delay(250);
		}
		
		IS_BUTTON_PRESSED=CAR_R;
 5ea:	83 e0       	ldi	r24, 0x03	; 3
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 5f2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		CAR_R_PPL_G_ON();
 5f6:	0e 94 50 00 	call	0xa0	; 0xa0 <CAR_R_PPL_G_ON>
		for (i=0;i<10;i++){
 5fa:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 5fe:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 602:	0f c0       	rjmp	.+30     	; 0x622 <APP_start+0xd0>
			Delay(500);
 604:	84 ef       	ldi	r24, 0xF4	; 244
 606:	91 e0       	ldi	r25, 0x01	; 1
 608:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
		check();}
 60c:	0e 94 74 00 	call	0xe8	; 0xe8 <check>
			Delay(250);
		}
		
		IS_BUTTON_PRESSED=CAR_R;
		CAR_R_PPL_G_ON();
		for (i=0;i<10;i++){
 610:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 614:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 618:	01 96       	adiw	r24, 0x01	; 1
 61a:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 61e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 622:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 626:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 62a:	0a 97       	sbiw	r24, 0x0a	; 10
 62c:	5c f3       	brlt	.-42     	; 0x604 <APP_start+0xb2>
			Delay(500);
		check();}
		CAR_R_PPL_G_OFF();
 62e:	0e 94 59 00 	call	0xb2	; 0xb2 <CAR_R_PPL_G_OFF>
		
		IS_BUTTON_PRESSED=CAR_YG;
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 63a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		for (i=0;i<10;i++)
 63e:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 642:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
 646:	17 c0       	rjmp	.+46     	; 0x676 <APP_start+0x124>
		{
			BOTH_Y_LED_ON();
 648:	0e 94 62 00 	call	0xc4	; 0xc4 <BOTH_Y_LED_ON>
			Delay(250);
 64c:	8a ef       	ldi	r24, 0xFA	; 250
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			check();
 654:	0e 94 74 00 	call	0xe8	; 0xe8 <check>
			BOTH_Y_LED_OFF();
 658:	0e 94 6b 00 	call	0xd6	; 0xd6 <BOTH_Y_LED_OFF>
			Delay(250);
 65c:	8a ef       	ldi	r24, 0xFA	; 250
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 94 94 03 	call	0x728	; 0x728 <Delay>
			Delay(500);
		check();}
		CAR_R_PPL_G_OFF();
		
		IS_BUTTON_PRESSED=CAR_YG;
		for (i=0;i<10;i++)
 664:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 668:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 66c:	01 96       	adiw	r24, 0x01	; 1
 66e:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 672:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 676:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 67a:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 67e:	0a 97       	sbiw	r24, 0x0a	; 10
 680:	1c f3       	brlt	.-58     	; 0x648 <APP_start+0xf6>
 682:	67 cf       	rjmp	.-306    	; 0x552 <APP_start>

00000684 <__vector_1>:
		}
}
}

ISR(EXT_INT_0)
{
 684:	1f 92       	push	r1
 686:	0f 92       	push	r0
 688:	0f b6       	in	r0, 0x3f	; 63
 68a:	0f 92       	push	r0
 68c:	11 24       	eor	r1, r1
 68e:	8f 93       	push	r24
 690:	9f 93       	push	r25
	if (IS_BUTTON_PRESSED==CAR_YG)
 692:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 696:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 69a:	81 30       	cpi	r24, 0x01	; 1
 69c:	91 05       	cpc	r25, r1
 69e:	39 f4       	brne	.+14     	; 0x6ae <__vector_1+0x2a>
	{
		YES_BUTTON_PRESSED=PPL_YG;
 6a0:	81 e0       	ldi	r24, 0x01	; 1
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 6a8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <YES_BUTTON_PRESSED>
 6ac:	1c c0       	rjmp	.+56     	; 0x6e6 <__vector_1+0x62>
	}
	else if (IS_BUTTON_PRESSED==CAR_YR)
 6ae:	82 30       	cpi	r24, 0x02	; 2
 6b0:	91 05       	cpc	r25, r1
 6b2:	39 f4       	brne	.+14     	; 0x6c2 <__vector_1+0x3e>
	{
		YES_BUTTON_PRESSED=PPL_YR;
 6b4:	82 e0       	ldi	r24, 0x02	; 2
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 6bc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <YES_BUTTON_PRESSED>
 6c0:	12 c0       	rjmp	.+36     	; 0x6e6 <__vector_1+0x62>
	}
	else if (IS_BUTTON_PRESSED==CAR_R)
 6c2:	83 30       	cpi	r24, 0x03	; 3
 6c4:	91 05       	cpc	r25, r1
 6c6:	39 f4       	brne	.+14     	; 0x6d6 <__vector_1+0x52>
	{
		YES_BUTTON_PRESSED=PPL_G;
 6c8:	83 e0       	ldi	r24, 0x03	; 3
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 6d0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <YES_BUTTON_PRESSED>
 6d4:	08 c0       	rjmp	.+16     	; 0x6e6 <__vector_1+0x62>
	}
	else if (IS_BUTTON_PRESSED==CAR_G)
 6d6:	04 97       	sbiw	r24, 0x04	; 4
 6d8:	31 f4       	brne	.+12     	; 0x6e6 <__vector_1+0x62>
	{
		YES_BUTTON_PRESSED=PPL_R;
 6da:	84 e0       	ldi	r24, 0x04	; 4
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <YES_BUTTON_PRESSED+0x1>
 6e2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <YES_BUTTON_PRESSED>
	}
}
 6e6:	9f 91       	pop	r25
 6e8:	8f 91       	pop	r24
 6ea:	0f 90       	pop	r0
 6ec:	0f be       	out	0x3f, r0	; 63
 6ee:	0f 90       	pop	r0
 6f0:	1f 90       	pop	r1
 6f2:	18 95       	reti

000006f4 <LED_init>:
 6f4:	98 2f       	mov	r25, r24
 6f6:	86 2f       	mov	r24, r22
 6f8:	41 e0       	ldi	r20, 0x01	; 1
 6fa:	69 2f       	mov	r22, r25
 6fc:	0e 94 a8 03 	call	0x750	; 0x750 <DIO_init>
 700:	08 95       	ret

00000702 <LED_on>:
 702:	98 2f       	mov	r25, r24
 704:	86 2f       	mov	r24, r22
 706:	41 e0       	ldi	r20, 0x01	; 1
 708:	69 2f       	mov	r22, r25
 70a:	0e 94 33 04 	call	0x866	; 0x866 <DIO_write>
 70e:	08 95       	ret

00000710 <LED_off>:
 710:	98 2f       	mov	r25, r24
 712:	86 2f       	mov	r24, r22
 714:	40 e0       	ldi	r20, 0x00	; 0
 716:	69 2f       	mov	r22, r25
 718:	0e 94 33 04 	call	0x866	; 0x866 <DIO_write>
 71c:	08 95       	ret

0000071e <Delay_init>:
#include "Delay.h"
void Delay_init()
{
	TCCR0=0x00;
 71e:	13 be       	out	0x33, r1	; 51
	TCCR0 |=(1<<1);
 720:	83 b7       	in	r24, 0x33	; 51
 722:	82 60       	ori	r24, 0x02	; 2
 724:	83 bf       	out	0x33, r24	; 51
 726:	08 95       	ret

00000728 <Delay>:
}
void Delay(unsigned int ms){
 728:	9c 01       	movw	r18, r24
	while(ms>0)
 72a:	0e c0       	rjmp	.+28     	; 0x748 <Delay+0x20>
	{
		TCNT0=0x80;
 72c:	80 e8       	ldi	r24, 0x80	; 128
 72e:	82 bf       	out	0x32, r24	; 50
		TCCR0 |=(1<<1);
 730:	93 b7       	in	r25, 0x33	; 51
 732:	92 60       	ori	r25, 0x02	; 2
 734:	93 bf       	out	0x33, r25	; 51
		while ((TIFR &(1<<0)) == 0);
 736:	08 b6       	in	r0, 0x38	; 56
 738:	00 fe       	sbrs	r0, 0
 73a:	fd cf       	rjmp	.-6      	; 0x736 <Delay+0xe>
		TIFR |= (1<<0);
 73c:	98 b7       	in	r25, 0x38	; 56
 73e:	91 60       	ori	r25, 0x01	; 1
 740:	98 bf       	out	0x38, r25	; 56
		TCCR0=0x00;
 742:	13 be       	out	0x33, r1	; 51
		ms--;
 744:	21 50       	subi	r18, 0x01	; 1
 746:	31 09       	sbc	r19, r1
{
	TCCR0=0x00;
	TCCR0 |=(1<<1);
}
void Delay(unsigned int ms){
	while(ms>0)
 748:	21 15       	cp	r18, r1
 74a:	31 05       	cpc	r19, r1
 74c:	79 f7       	brne	.-34     	; 0x72c <Delay+0x4>
		while ((TIFR &(1<<0)) == 0);
		TIFR |= (1<<0);
		TCCR0=0x00;
		ms--;
	}
}
 74e:	08 95       	ret

00000750 <DIO_init>:
 750:	62 34       	cpi	r22, 0x42	; 66
 752:	59 f1       	breq	.+86     	; 0x7aa <DIO_init+0x5a>
 754:	18 f4       	brcc	.+6      	; 0x75c <DIO_init+0xc>
 756:	61 34       	cpi	r22, 0x41	; 65
 758:	41 f0       	breq	.+16     	; 0x76a <DIO_init+0x1a>
 75a:	08 95       	ret
 75c:	63 34       	cpi	r22, 0x43	; 67
 75e:	09 f4       	brne	.+2      	; 0x762 <DIO_init+0x12>
 760:	44 c0       	rjmp	.+136    	; 0x7ea <DIO_init+0x9a>
 762:	64 34       	cpi	r22, 0x44	; 68
 764:	09 f4       	brne	.+2      	; 0x768 <DIO_init+0x18>
 766:	60 c0       	rjmp	.+192    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 768:	08 95       	ret
 76a:	41 11       	cpse	r20, r1
 76c:	0e c0       	rjmp	.+28     	; 0x78a <DIO_init+0x3a>
 76e:	4a b3       	in	r20, 0x1a	; 26
 770:	21 e0       	ldi	r18, 0x01	; 1
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	b9 01       	movw	r22, r18
 776:	02 c0       	rjmp	.+4      	; 0x77c <DIO_init+0x2c>
 778:	66 0f       	add	r22, r22
 77a:	77 1f       	adc	r23, r23
 77c:	8a 95       	dec	r24
 77e:	e2 f7       	brpl	.-8      	; 0x778 <DIO_init+0x28>
 780:	cb 01       	movw	r24, r22
 782:	80 95       	com	r24
 784:	84 23       	and	r24, r20
 786:	8a bb       	out	0x1a, r24	; 26
 788:	08 95       	ret
 78a:	41 30       	cpi	r20, 0x01	; 1
 78c:	09 f0       	breq	.+2      	; 0x790 <DIO_init+0x40>
 78e:	6a c0       	rjmp	.+212    	; 0x864 <__stack+0x5>
 790:	4a b3       	in	r20, 0x1a	; 26
 792:	21 e0       	ldi	r18, 0x01	; 1
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	b9 01       	movw	r22, r18
 798:	02 c0       	rjmp	.+4      	; 0x79e <DIO_init+0x4e>
 79a:	66 0f       	add	r22, r22
 79c:	77 1f       	adc	r23, r23
 79e:	8a 95       	dec	r24
 7a0:	e2 f7       	brpl	.-8      	; 0x79a <DIO_init+0x4a>
 7a2:	cb 01       	movw	r24, r22
 7a4:	84 2b       	or	r24, r20
 7a6:	8a bb       	out	0x1a, r24	; 26
 7a8:	08 95       	ret
 7aa:	41 11       	cpse	r20, r1
 7ac:	0e c0       	rjmp	.+28     	; 0x7ca <DIO_init+0x7a>
 7ae:	47 b3       	in	r20, 0x17	; 23
 7b0:	21 e0       	ldi	r18, 0x01	; 1
 7b2:	30 e0       	ldi	r19, 0x00	; 0
 7b4:	b9 01       	movw	r22, r18
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <DIO_init+0x6c>
 7b8:	66 0f       	add	r22, r22
 7ba:	77 1f       	adc	r23, r23
 7bc:	8a 95       	dec	r24
 7be:	e2 f7       	brpl	.-8      	; 0x7b8 <DIO_init+0x68>
 7c0:	cb 01       	movw	r24, r22
 7c2:	80 95       	com	r24
 7c4:	84 23       	and	r24, r20
 7c6:	87 bb       	out	0x17, r24	; 23
 7c8:	08 95       	ret
 7ca:	41 30       	cpi	r20, 0x01	; 1
 7cc:	09 f0       	breq	.+2      	; 0x7d0 <DIO_init+0x80>
 7ce:	4a c0       	rjmp	.+148    	; 0x864 <__stack+0x5>
 7d0:	47 b3       	in	r20, 0x17	; 23
 7d2:	21 e0       	ldi	r18, 0x01	; 1
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	b9 01       	movw	r22, r18
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <DIO_init+0x8e>
 7da:	66 0f       	add	r22, r22
 7dc:	77 1f       	adc	r23, r23
 7de:	8a 95       	dec	r24
 7e0:	e2 f7       	brpl	.-8      	; 0x7da <DIO_init+0x8a>
 7e2:	cb 01       	movw	r24, r22
 7e4:	84 2b       	or	r24, r20
 7e6:	87 bb       	out	0x17, r24	; 23
 7e8:	08 95       	ret
 7ea:	41 11       	cpse	r20, r1
 7ec:	0e c0       	rjmp	.+28     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7ee:	44 b3       	in	r20, 0x14	; 20
 7f0:	21 e0       	ldi	r18, 0x01	; 1
 7f2:	30 e0       	ldi	r19, 0x00	; 0
 7f4:	b9 01       	movw	r22, r18
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <DIO_init+0xac>
 7f8:	66 0f       	add	r22, r22
 7fa:	77 1f       	adc	r23, r23
 7fc:	8a 95       	dec	r24
 7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <DIO_init+0xa8>
 800:	cb 01       	movw	r24, r22
 802:	80 95       	com	r24
 804:	84 23       	and	r24, r20
 806:	84 bb       	out	0x14, r24	; 20
 808:	08 95       	ret
 80a:	41 30       	cpi	r20, 0x01	; 1
 80c:	59 f5       	brne	.+86     	; 0x864 <__stack+0x5>
 80e:	44 b3       	in	r20, 0x14	; 20
 810:	21 e0       	ldi	r18, 0x01	; 1
 812:	30 e0       	ldi	r19, 0x00	; 0
 814:	b9 01       	movw	r22, r18
 816:	02 c0       	rjmp	.+4      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 818:	66 0f       	add	r22, r22
 81a:	77 1f       	adc	r23, r23
 81c:	8a 95       	dec	r24
 81e:	e2 f7       	brpl	.-8      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 820:	cb 01       	movw	r24, r22
 822:	84 2b       	or	r24, r20
 824:	84 bb       	out	0x14, r24	; 20
 826:	08 95       	ret
 828:	41 11       	cpse	r20, r1
 82a:	0e c0       	rjmp	.+28     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 82c:	41 b3       	in	r20, 0x11	; 17
 82e:	21 e0       	ldi	r18, 0x01	; 1
 830:	30 e0       	ldi	r19, 0x00	; 0
 832:	b9 01       	movw	r22, r18
 834:	02 c0       	rjmp	.+4      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 836:	66 0f       	add	r22, r22
 838:	77 1f       	adc	r23, r23
 83a:	8a 95       	dec	r24
 83c:	e2 f7       	brpl	.-8      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 83e:	cb 01       	movw	r24, r22
 840:	80 95       	com	r24
 842:	84 23       	and	r24, r20
 844:	81 bb       	out	0x11, r24	; 17
 846:	08 95       	ret
 848:	41 30       	cpi	r20, 0x01	; 1
 84a:	61 f4       	brne	.+24     	; 0x864 <__stack+0x5>
 84c:	41 b3       	in	r20, 0x11	; 17
 84e:	21 e0       	ldi	r18, 0x01	; 1
 850:	30 e0       	ldi	r19, 0x00	; 0
 852:	b9 01       	movw	r22, r18
 854:	02 c0       	rjmp	.+4      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 856:	66 0f       	add	r22, r22
 858:	77 1f       	adc	r23, r23
 85a:	8a 95       	dec	r24
 85c:	e2 f7       	brpl	.-8      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 85e:	cb 01       	movw	r24, r22
 860:	84 2b       	or	r24, r20
 862:	81 bb       	out	0x11, r24	; 17
 864:	08 95       	ret

00000866 <DIO_write>:
 866:	62 34       	cpi	r22, 0x42	; 66
 868:	59 f1       	breq	.+86     	; 0x8c0 <DIO_write+0x5a>
 86a:	18 f4       	brcc	.+6      	; 0x872 <DIO_write+0xc>
 86c:	61 34       	cpi	r22, 0x41	; 65
 86e:	41 f0       	breq	.+16     	; 0x880 <DIO_write+0x1a>
 870:	08 95       	ret
 872:	63 34       	cpi	r22, 0x43	; 67
 874:	09 f4       	brne	.+2      	; 0x878 <DIO_write+0x12>
 876:	44 c0       	rjmp	.+136    	; 0x900 <DIO_write+0x9a>
 878:	64 34       	cpi	r22, 0x44	; 68
 87a:	09 f4       	brne	.+2      	; 0x87e <DIO_write+0x18>
 87c:	60 c0       	rjmp	.+192    	; 0x93e <DIO_write+0xd8>
 87e:	08 95       	ret
 880:	41 11       	cpse	r20, r1
 882:	0e c0       	rjmp	.+28     	; 0x8a0 <DIO_write+0x3a>
 884:	4b b3       	in	r20, 0x1b	; 27
 886:	21 e0       	ldi	r18, 0x01	; 1
 888:	30 e0       	ldi	r19, 0x00	; 0
 88a:	b9 01       	movw	r22, r18
 88c:	02 c0       	rjmp	.+4      	; 0x892 <DIO_write+0x2c>
 88e:	66 0f       	add	r22, r22
 890:	77 1f       	adc	r23, r23
 892:	8a 95       	dec	r24
 894:	e2 f7       	brpl	.-8      	; 0x88e <DIO_write+0x28>
 896:	cb 01       	movw	r24, r22
 898:	80 95       	com	r24
 89a:	84 23       	and	r24, r20
 89c:	8b bb       	out	0x1b, r24	; 27
 89e:	08 95       	ret
 8a0:	41 30       	cpi	r20, 0x01	; 1
 8a2:	09 f0       	breq	.+2      	; 0x8a6 <DIO_write+0x40>
 8a4:	6a c0       	rjmp	.+212    	; 0x97a <DIO_write+0x114>
 8a6:	4b b3       	in	r20, 0x1b	; 27
 8a8:	21 e0       	ldi	r18, 0x01	; 1
 8aa:	30 e0       	ldi	r19, 0x00	; 0
 8ac:	b9 01       	movw	r22, r18
 8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <DIO_write+0x4e>
 8b0:	66 0f       	add	r22, r22
 8b2:	77 1f       	adc	r23, r23
 8b4:	8a 95       	dec	r24
 8b6:	e2 f7       	brpl	.-8      	; 0x8b0 <DIO_write+0x4a>
 8b8:	cb 01       	movw	r24, r22
 8ba:	84 2b       	or	r24, r20
 8bc:	8b bb       	out	0x1b, r24	; 27
 8be:	08 95       	ret
 8c0:	41 11       	cpse	r20, r1
 8c2:	0e c0       	rjmp	.+28     	; 0x8e0 <DIO_write+0x7a>
 8c4:	48 b3       	in	r20, 0x18	; 24
 8c6:	21 e0       	ldi	r18, 0x01	; 1
 8c8:	30 e0       	ldi	r19, 0x00	; 0
 8ca:	b9 01       	movw	r22, r18
 8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <DIO_write+0x6c>
 8ce:	66 0f       	add	r22, r22
 8d0:	77 1f       	adc	r23, r23
 8d2:	8a 95       	dec	r24
 8d4:	e2 f7       	brpl	.-8      	; 0x8ce <DIO_write+0x68>
 8d6:	cb 01       	movw	r24, r22
 8d8:	80 95       	com	r24
 8da:	84 23       	and	r24, r20
 8dc:	88 bb       	out	0x18, r24	; 24
 8de:	08 95       	ret
 8e0:	41 30       	cpi	r20, 0x01	; 1
 8e2:	09 f0       	breq	.+2      	; 0x8e6 <DIO_write+0x80>
 8e4:	4a c0       	rjmp	.+148    	; 0x97a <DIO_write+0x114>
 8e6:	48 b3       	in	r20, 0x18	; 24
 8e8:	21 e0       	ldi	r18, 0x01	; 1
 8ea:	30 e0       	ldi	r19, 0x00	; 0
 8ec:	b9 01       	movw	r22, r18
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <DIO_write+0x8e>
 8f0:	66 0f       	add	r22, r22
 8f2:	77 1f       	adc	r23, r23
 8f4:	8a 95       	dec	r24
 8f6:	e2 f7       	brpl	.-8      	; 0x8f0 <DIO_write+0x8a>
 8f8:	cb 01       	movw	r24, r22
 8fa:	84 2b       	or	r24, r20
 8fc:	88 bb       	out	0x18, r24	; 24
 8fe:	08 95       	ret
 900:	41 11       	cpse	r20, r1
 902:	0e c0       	rjmp	.+28     	; 0x920 <DIO_write+0xba>
 904:	45 b3       	in	r20, 0x15	; 21
 906:	21 e0       	ldi	r18, 0x01	; 1
 908:	30 e0       	ldi	r19, 0x00	; 0
 90a:	b9 01       	movw	r22, r18
 90c:	02 c0       	rjmp	.+4      	; 0x912 <DIO_write+0xac>
 90e:	66 0f       	add	r22, r22
 910:	77 1f       	adc	r23, r23
 912:	8a 95       	dec	r24
 914:	e2 f7       	brpl	.-8      	; 0x90e <DIO_write+0xa8>
 916:	cb 01       	movw	r24, r22
 918:	80 95       	com	r24
 91a:	84 23       	and	r24, r20
 91c:	85 bb       	out	0x15, r24	; 21
 91e:	08 95       	ret
 920:	41 30       	cpi	r20, 0x01	; 1
 922:	59 f5       	brne	.+86     	; 0x97a <DIO_write+0x114>
 924:	45 b3       	in	r20, 0x15	; 21
 926:	21 e0       	ldi	r18, 0x01	; 1
 928:	30 e0       	ldi	r19, 0x00	; 0
 92a:	b9 01       	movw	r22, r18
 92c:	02 c0       	rjmp	.+4      	; 0x932 <DIO_write+0xcc>
 92e:	66 0f       	add	r22, r22
 930:	77 1f       	adc	r23, r23
 932:	8a 95       	dec	r24
 934:	e2 f7       	brpl	.-8      	; 0x92e <DIO_write+0xc8>
 936:	cb 01       	movw	r24, r22
 938:	84 2b       	or	r24, r20
 93a:	85 bb       	out	0x15, r24	; 21
 93c:	08 95       	ret
 93e:	41 11       	cpse	r20, r1
 940:	0e c0       	rjmp	.+28     	; 0x95e <DIO_write+0xf8>
 942:	42 b3       	in	r20, 0x12	; 18
 944:	21 e0       	ldi	r18, 0x01	; 1
 946:	30 e0       	ldi	r19, 0x00	; 0
 948:	b9 01       	movw	r22, r18
 94a:	02 c0       	rjmp	.+4      	; 0x950 <DIO_write+0xea>
 94c:	66 0f       	add	r22, r22
 94e:	77 1f       	adc	r23, r23
 950:	8a 95       	dec	r24
 952:	e2 f7       	brpl	.-8      	; 0x94c <DIO_write+0xe6>
 954:	cb 01       	movw	r24, r22
 956:	80 95       	com	r24
 958:	84 23       	and	r24, r20
 95a:	82 bb       	out	0x12, r24	; 18
 95c:	08 95       	ret
 95e:	41 30       	cpi	r20, 0x01	; 1
 960:	61 f4       	brne	.+24     	; 0x97a <DIO_write+0x114>
 962:	42 b3       	in	r20, 0x12	; 18
 964:	21 e0       	ldi	r18, 0x01	; 1
 966:	30 e0       	ldi	r19, 0x00	; 0
 968:	b9 01       	movw	r22, r18
 96a:	02 c0       	rjmp	.+4      	; 0x970 <DIO_write+0x10a>
 96c:	66 0f       	add	r22, r22
 96e:	77 1f       	adc	r23, r23
 970:	8a 95       	dec	r24
 972:	e2 f7       	brpl	.-8      	; 0x96c <DIO_write+0x106>
 974:	cb 01       	movw	r24, r22
 976:	84 2b       	or	r24, r20
 978:	82 bb       	out	0x12, r24	; 18
 97a:	08 95       	ret

0000097c <interrupt_init>:
#include "interrupt.h"


void interrupt_init()
{
		DDRD |=(1<<2);
 97c:	81 b3       	in	r24, 0x11	; 17
 97e:	84 60       	ori	r24, 0x04	; 4
 980:	81 bb       	out	0x11, r24	; 17
		sei();
 982:	78 94       	sei
		MCUCR |=0x03;
 984:	85 b7       	in	r24, 0x35	; 53
 986:	83 60       	ori	r24, 0x03	; 3
 988:	85 bf       	out	0x35, r24	; 53
		GICR |= (1<<11);
 98a:	8b b7       	in	r24, 0x3b	; 59
 98c:	80 64       	ori	r24, 0x40	; 64
 98e:	8b bf       	out	0x3b, r24	; 59
 990:	08 95       	ret

00000992 <main>:
#include "Application/application.h"
int main(void)
{
	APP_init();
 992:	0e 94 8c 02 	call	0x518	; 0x518 <APP_init>
	APP_start();
 996:	0e 94 a9 02 	call	0x552	; 0x552 <APP_start>
}
 99a:	80 e0       	ldi	r24, 0x00	; 0
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	08 95       	ret

000009a0 <_exit>:
 9a0:	f8 94       	cli

000009a2 <__stop_program>:
 9a2:	ff cf       	rjmp	.-2      	; 0x9a2 <__stop_program>
